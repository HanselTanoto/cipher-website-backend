module.exports = {
    det(a){
        let ret = 0
        ret += a[0][0] * (a[1][1] * a[2][2] - a[2][1] * a[1][2])
        ret -= a[0][1] * (a[1][0] * a[2][2] - a[1][2] * a[2][0])
        ret += a[0][2] * (a[1][0] * a[2][1] - a[1][1] * a[2][0])
        return ret
    },

    invmat(a){
        let mat = []
        for(let i=0;i<3;i++){
            mat.push([])
            for(let j=0;j<3;j++){
                mat[i].push(0)
            }
        }
        mat[0][0] = (a[1][1] * a[2][2] - a[2][1] * a[1][2])
        mat[1][0] = -(a[1][0] * a[2][2] - a[1][2] * a[2][0])
        mat[2][0] = (a[1][0] * a[2][1] - a[1][1] * a[2][0])
        mat[0][1] = -(a[0][1] * a[2][2] - a[2][1] * a[0][2])
        mat[1][1] = (a[0][0] * a[2][2] - a[0][2] * a[2][0])
        mat[2][2] = -(a[0][0] * a[2][1] - a[0][1] * a[2][0])
        mat[0][2] = (a[0][1] * a[1][2] - a[1][1] * a[0][2])
        mat[1][2] = -(a[0][0] * a[1][2] - a[0][2] * a[1][0])
        mat[2][2] = (a[0][0] * a[1][1] - a[0][1] * a[1][0])

        return mat
    },
    det2(a){
       return a[1][1] * a[0][0] - a[0][1] * a[1][0] 
    },
    invmat2(a){
        let mat = []
        for(let i=0;i<2;i++){
            mat.push([])
            for(let j=0;j<2;j++){
                mat[i].push(0)
            }
        }
        mat[0][0] = a[1][1]
        mat[0][1] = -a[0][1]
        mat[1][0] = -a[1][0]
        mat[1][1] = a[0][0]

        return mat
    }
}